apply plugin: 'com.android.library'

android {
    compileSdkVersion 19
    buildToolsVersion "23.0.2"

    defaultConfig {
        minSdkVersion 19
        targetSdkVersion 19
    }

    sourceSets {
        main {
            manifest.srcFile 'AndroidManifest.xml'
            java.srcDirs = ['src','contrib/commons-math3-3.2-src/src/main/java']
            res.srcDirs = ['res']
            jni.srcDirs = []
            jniLibs.srcDirs = ['libs']
        }

        androidTest.setRoot('androidTest')
        test.setRoot('unitTest')
    }

    tasks.withType(JavaCompile) {
        compileTask -> compileTask.dependsOn nativeLibsToJar
    }

    task nativeLibsToJar(type: Zip, dependsOn: 'buildNative', description: 'Create a JAR of the native libs') {
        destinationDir new File(buildDir, 'libs')
        baseName 'ndk-libs'
        extension 'jar'
        from(new File(buildDir, 'libs')) { include '**/*.so' }
        into 'lib/'
    }

    task buildNative(type: Exec, description: 'Compile JNI source via NDK') {
        println('executing ndkBuild')
        def ndkDir = android.ndkDirectory
        commandLine "$ndkDir/ndk-build.cmd",
                '-C', file('jni').absolutePath,
                '-j', Runtime.runtime.availableProcessors(),
                'all',
                'NDK_DEBUG=1'
    }

    task cleanNative(type: Exec, description: 'Clean JNI object files') {
        def ndkDir = android.ndkDirectory
        commandLine "$ndkDir/ndk-build.cmd",
                '-C', file('jni').absolutePath,
                'clean'
    }

    clean.dependsOn 'cleanNative'

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-project.txt'
        }
    }
	
	lintOptions {
        abortOnError false
    }
	
	compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_7
        targetCompatibility JavaVersion.VERSION_1_7
    }
}

dependencies {
    compile files('libs/SystemUtils.jar')
    compile files('libs/VrApi.jar')
    compile files('libs/VrAppFramework.jar')
    testCompile 'junit:junit:4.12'
    testCompile "org.mockito:mockito-core:1.9.5"
}
